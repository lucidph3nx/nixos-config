name: update-flakes
"on":
  schedule:
    - cron: 20 4 * * 0,2,4,6
  workflow_dispatch: null

jobs:
  update-flakes:
    runs-on: ubuntu-latest
    outputs:
      updated: ${{ steps.update.outputs.updated }}
    steps:
      - uses: actions/checkout@v5
      - uses: cachix/install-nix-action@v31
        with:
          extra_nix_config: |-
            accept-flake-config = true
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Update flake.lock
        id: update
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          if nix flake update --commit-lock-file; then
            echo "updated=true" >> $GITHUB_OUTPUT
          else
            echo "updated=false" >> $GITHUB_OUTPUT
          fi
      - name: Upload updated flake
        if: steps.update.outputs.updated == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: updated-flake
          path: |
            flake.lock
            .git/

  build-configs:
    needs: update-flakes
    if: needs.update-flakes.outputs.updated == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config: [navi, tui]
    steps:
      - uses: jlumbroso/free-disk-space@v1.3.1
        with:
          swap-storage: false
          tool-cache: true
      - uses: actions/checkout@v5
      - name: Download updated flake
        uses: actions/download-artifact@v6
        with:
          name: updated-flake
      - uses: cachix/install-nix-action@v31
        with:
          extra_nix_config: |-
            accept-flake-config = true
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v16
        with:
          authToken: ${{ secrets.CACHIX_TOKEN }}
          extraPullNames: nix-community
          name: lucidph3nx-nixos-config
      - name: Build NixOS config for ${{ matrix.config }}
        run: nix build --print-build-logs '.#nixosConfigurations.${{ matrix.config }}.config.system.build.toplevel'

  create-pr:
    needs: [update-flakes, build-configs]
    if: needs.update-flakes.outputs.updated == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Download updated flake
        uses: actions/download-artifact@v6
        with:
          name: updated-flake
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          body: |
            ## Run report

            https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          branch: flake-updates
          delete-branch: true
          title: Update flake.lock
